#include "./headers/commonHeaders.h"

typedef long long ll;

ll getSide(ll x1, ll y1, ll x2, ll y2, ll xp, ll yp)
{
    return (x2 - x1) * (yp - y1) - (y2 - y1) * (xp - x1);
}

bool isInside(vector<vector<int>> &triangle, vector<int> &pointToTest)
{
    int i = 0;
    while (i < 3)
    {
        int x1 = triangle[i][0];
        int y1 = triangle[i][1];
        int x2 = triangle[(i + 1) % 3][0];
        int y2 = triangle[(i + 1) % 3][1];
        int xt = triangle[(i + 2) % 3][0];
        int yt = triangle[(i + 2) % 3][1];
        int xp = pointToTest[0];
        int yp = pointToTest[1];
        auto sideTriangle = getSide(x1, y1, x2, y2, xt, yt);
        auto sidePoint = getSide(x1, y1, x2, y2, xp, yp);
        if ((sidePoint == 0) || (sideTriangle < 0 && sidePoint > 0) || (sideTriangle > 0 && sidePoint < 0))
            return false;
        i++;
    }
    return true;
}

int getTrianglePower(int tp1, int tp2, int tp3, vector<vector<int>> &A)
{
    int n = A.size();
    int power = 0;
    vector<vector<int>> triangle;
    triangle.push_back(A[tp1]);
    triangle.push_back(A[tp2]);
    triangle.push_back(A[tp3]);
    min(1, 2);
    for (int i = tp1 + 1; i < tp3; i++)
    {
        if (i != tp1 && i != tp2 && i != tp3)
        {
            if (isInside(triangle, A[i]))
                power++;
        }
    }
    return power;
}

vector<int> solve(vector<vector<int>> &A)
{
    int n = A.size();
    sort(A.begin(), A.end());
    vector<int> power(n - 2, 0);
    for (int i = 0; i <= n - 3; i++)
    {
        for (int j = i + 1; j < n - 1; j++)
        {
            for (int k = j + 1; k < n; k++)
            {
                auto tpower = getTrianglePower(i, j, k, A);
                power[tpower]++;
            }
        }
    }
    return power;
}

void main()
{
    vector<vector<int>> A{{197314, 651476}, {754116, 95820}, {641892, 37525}, {395528, 538839}, {897525, 897490}, {651136, 101360}, {889618, 247643}, {170337, 80928}, {506582, 826621}, {804310, 917955}, {370888, 634225}, {426815, 274570}, {543437, 220853}, {460008, 107722}, {811783, 712350}, {418657, 9097}, {363827, 689126}, {621269, 522071}, {726651, 533149}, {60910, 140528}, {430639, 228398}, {241888, 836610}, {992393, 928577}, {433890, 498976}, {755199, 754552}, {416931, 126087}, {388777, 360099}, {400657, 448566}, {580952, 377017}, {72641, 392735}, {89368, 491298}, {918184, 453195}, {696776, 55805}, {975266, 423428}, {588954, 552528}, {80308, 19593}, {297278, 322197}, {372555, 289672}, {250774, 806445}, {305000, 522325}, {560997, 238283}, {648412, 466127}, {598382, 565421}, {914693, 179334}, {942439, 987334}, {88421, 548159}, {994985, 522957}, {1354, 691761}, {578762, 492972}, {631541, 167716}, {561852, 711850}, {703662, 375482}, {550399, 76217}, {665154, 801173}, {399015, 486506}, {839851, 476364}, {724790, 488263}, {942491, 323172}, {570037, 373537}, {18859, 28828}, {360871, 107280}, {576987, 355856}, {146590, 578341}, {563970, 725352}, {587665, 195511}, {893069, 149517}, {907361, 113083}, {41351, 974112}, {189300, 706506}, {291638, 104667}, {709364, 131489}, {581032, 434154}, {136104, 39875}, {273679, 706141}, {413412, 292538}, {734969, 290636}, {916170, 311956}, {162844, 62760}, {406649, 726814}, {304465, 994314}, {922326, 713886}, {660183, 346039}, {826969, 701535}, {320152, 532621}, {924393, 611790}, {637289, 150109}, {259631, 734673}, {584264, 395735}, {774548, 374295}, {101877, 704313}, {666833, 353198}, {994949, 99355}, {665155, 157793}, {678468, 588156}, {400960, 982933}, {98823, 323286}, {213171, 275358}, {185677, 40140}, {493245, 22181}, {572761, 933990}, {150323, 210050}, {84100, 409954}, {461075, 668364}, {322042, 235624}, {42659, 423919}, {456289, 225844}, {293469, 451238}, {841551, 474976}, {125383, 520019}, {63133, 526343}, {19304, 161956}, {365981, 232475}, {953666, 68011}, {788967, 446912}, {90192, 361729}, {380902, 756868}, {88131, 465002}, {683174, 549207}, {649718, 5216}, {301183, 692377}, {945487, 757472}, {434573, 238957}, {725062, 276125}, {713933, 366797}, {312496, 293418}, {893141, 848153}, {971726, 775474}, {596980, 925393}, {843485, 385948}, {372305, 450030}, {264029, 269559}, {206898, 352160}, {734562, 406424}, {417719, 384280}, {411641, 718902}, {593010, 873480}, {992726, 27583}, {628789, 234140}, {303708, 342723}, {600938, 132557}, {152493, 10431}, {980710, 124220}, {785905, 577690}, {49613, 629391}, {963638, 938270}, {79421, 227667}, {207829, 802671}, {96180, 458743}, {209095, 513899}, {843024, 137088}};
    print("Result ", solve(A));
}